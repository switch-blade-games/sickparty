<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MYsnd=whale_snd

SMALL=1
MED=2
LARGE=3

FONTsize=MED

word_hoard()

CURRENTword=0;

MYtext=WORD[CURRENTword]

MYtext="Sick Party"

//assign a starting color for each letter

var i=0;

FONTsize=MED

repeat(string_length(MYtext)){

    COL[i]=random_text_color()
    
    CLIP[i]=random(sprite_get_number(color_clip_spr))
    
    if(FONTsize=SMALL)
    FONT[i]=random_font_small()
    
    if(FONTsize=MED)
    FONT[i]=random_font_med()
    
    if(FONTsize=LARGE)
    FONT[i]=random_font_large()
    
    
    i+=1
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw ransom
//argument0= the original string - DONORstring
//argument1= the spacing between letters - SPACING
//argument2= v spacing - Vspace
//argument3= max string width - MAXlen
//argument4= x placement of string - PLACEx
//argument5= y placement of string - PLACEy
//argument6= drop shadow
//argument7= odds (higher number = less likely)



///MED settings
//argument1= 20 for MED
//argument2= 40 for MED
//argument4= 20 for MED


///SMALL setings
//argument1=
//argument2=
//argument4=


//place back MYtext

//MYtext="I feel...G...O...O...D"

draw_ransom(MYtext,20,40,360,100,100,true,50)





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//snd_pitch(MYsnd,0.3)

//play_snd(MYsnd,false)


CURRENTword-=1

if(CURRENTword&lt;0)
CURRENTword=(array_length_1d(WORD)-1)

MYtext=WORD[CURRENTword]


//clear_array(COL)
//clear_array(FONT)

//assign a starting color for each letter

var i=0;
repeat(string_length(MYtext)){

    COL[i]=random_text_color()
    
    CLIP[i]=random(sprite_get_number(color_clip_spr))
    
    if(FONTsize=SMALL)
    FONT[i]=random_font_small()
    
    if(FONTsize=MED)
    FONT[i]=random_font_med()
    
    if(FONTsize=LARGE)
    FONT[i]=random_font_large()
    i+=1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//argument0= sound
//argument1= pitch variance

//snd_pitch(MYsnd,0.3)

//play_snd(MYsnd,false)

CURRENTword+=1

if(CURRENTword&gt;(array_length_1d(WORD)-1))
CURRENTword=0;

MYtext=WORD[CURRENTword]

//clear_array(COL)
//clear_array(FONT)

//assign a starting color for each letter

var i=0;
repeat(string_length(MYtext)){

    COL[i]=random_text_color()
    
    CLIP[i]=random(sprite_get_number(color_clip_spr))
    
    if(FONTsize=SMALL)
    FONT[i]=random_font_small()
    
    if(FONTsize=MED)
    FONT[i]=random_font_med()
    
    if(FONTsize=LARGE)
    FONT[i]=random_font_large()
    i+=1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
