<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>xi_rolling_elec_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 4;

// tuners
duration = 5*room_speed; // time in steps
roll_dir = 1;

timer = duration;

//look in xi_grapple alarm[2] event for creation code
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>outside_view(20);

var inst = instance_place(x,y,par_reflector);
if (inst != noone)
    {
    var _rx1 = inst.rx1;
    var _ry1 = inst.ry1;
    var _rx2 = inst.rx2;
    var _ry2 = inst.ry2;
    var _nx = inst.nx;
    var _ny = inst.ny;
    
    if (line_line_collision(bbox_right,bbox_top,bbox_right,bbox_bottom,  _rx1,_ry1,_rx2,_ry2))
    or (line_line_collision(bbox_left,bbox_top,bbox_right,bbox_top,      _rx1,_ry1,_rx2,_ry2))
    or (line_line_collision(bbox_left,bbox_top,bbox_left,bbox_bottom,    _rx1,_ry1,_rx2,_ry2))
    or (line_line_collision(bbox_left,bbox_bottom,bbox_right,bbox_bottom,_rx1,_ry1,_rx2,_ry2))
        {
        direction = point_direction(0,0,_nx,_ny)-(90*roll_dir);
        while(place_meeting(x,y,par_reflector))
            {
            x += _nx;
            y += _ny;
            }
        }
    }

if (timer &gt; 0)
    timer--;
else
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
