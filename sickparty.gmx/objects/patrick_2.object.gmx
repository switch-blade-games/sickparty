<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>fly_man_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enemy_init(200)

Xplace[0]=40
Xplace[1]=200
Xplace[2]=360

CURRENTplace=0



WAITtime=120

spe=2

FLIP=-1

DESTlist=ds_list_create();

//argument0 = list name
//argument1 = list number
ds_make_shuffle(DESTlist,6)

alarm[0]=WAITtime


WAIT=1
MOVE=2
FLIPPING=3

state=WAIT


GOdest=-1


FLIPtime=60

//animation speeds
FLIPspe=0.1
WAITspe=0.1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var DEATHson=instance_create(x,y,pre_pat_2);

DEATHson.image_yscale=image_yscale


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///perform the move

if(GOdest&gt;x)
    motion_set(0,spe)
if(GOdest&lt;x)
    motion_set(180,spe)
    
    
state=MOVE
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>exit

/// complete the FLIP

if(FLIP=1)
FLIP=-1
else
FLIP=1


//then perform the MOVE
alarm[2]=2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>////determine where to go next

NEWdest=ds_list_find_value(DESTlist,0);


    ds_list_delete(DESTlist,0)
    
if(ds_list_empty(DESTlist)=true){
    //argument0 = list name
//argument1 = list number
ds_make_shuffle(DESTlist,6)
}
    

//top
if(NEWdest=0)
    GOdest=Xplace[0]
if(NEWdest=1)
    GOdest=Xplace[1]
if(NEWdest=2)
    GOdest=Xplace[2]
    
//bottom
if(NEWdest=3)
    GOdest=Xplace[0]
if(NEWdest=4)
    GOdest=Xplace[1]
if(NEWdest=5)
    GOdest=Xplace[2]
    
if(NEWdest&lt;3)
if(FLIP=-1)
state=MOVE

if(NEWdest&lt;3)
if(FLIP=1)
state=FLIPPING

if(NEWdest&gt;=3)
if(FLIP=-1)
state=FLIPPING

if(NEWdest&gt;=3)
if(FLIP=1)
state=MOVE



if(state=MOVE){
alarm[2]=2

var Yplace=20*FLIP;
var PLACErange=20;

repeat(8){

    instance_create(x+random(PLACErange)-random(PLACErange),y+Yplace+random(PLACErange)-random(PLACErange),lango_ball)

    }
}
        
if(state=FLIPPING){

var SLIVson=instance_create(x,y+(40*FLIP),sliver);
with(SLIVson)
    event_perform(ev_create,0)
    
SLIVson.FLIP=-1
SLIVson.direction=180
SLIVson.speed=1

var SLIVson=instance_create(x,y+(40*FLIP),sliver);
with(SLIVson)
    event_perform(ev_create,0)
    
SLIVson.FLIP=1
SLIVson.direction=0
SLIVson.speed=1

sprite_index=fly_man_flip_spr
image_index=0
image_speed=FLIPspe
//alarm[1]=FLIPtime
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(state=WAIT)
if (life &lt;=0)
  event_inherited();

  
 take_damage = true;
  deal_damage = true;
  block_projectiles = true; 

if(state=MOVE)
    if(point_distance(x,x,GOdest,GOdest)&lt;1){
        x=GOdest
        state=WAIT
        speed=0
        
        alarm[0]=WAITtime
    }
    
    

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>play_snd(servo_hit_snd,false)

snd_pitch(servo_hit_snd,1)

with(servo_controller)
image_index=random(100)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// complete the FLIP


if(state=FLIPPING){

if(FLIP=1)
FLIP=-1
else
FLIP=1


//then perform the MOVE
alarm[2]=2

state=WAIT

sprite_index=fly_man_spr
image_index=0
image_speed=WAITspe

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_yscale=-FLIP




draw_enemy_self()

//draw_text(x,y,GOdest)

var CHECKflip=-1;

if(state=FLIPPING)
CHECKflip=true


//draw_text(x,y-20,CHECKflip)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
