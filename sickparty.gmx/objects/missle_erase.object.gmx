<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>over_eraser_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>over_brush_mask_spr</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>GOMISSLE=1
PAINTMISSLE=2
DONE=5


MISSLEx=0
MISSLEy=0

spe=14

state=GOMISSLE

PAINTspe=spe

motion_set(point_direction(x,y,MISSLEx,MISSLEy),spe)

MISSLEsur=surface_create(400,240)

PAINTsur=surface_create(400,240)


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw the black and white onto the PAINTsur

surface_set_target(PAINTsur)

draw_set_color(c_black)

draw_rectangle(0,0,400,240,false)

draw_set_color(c_white)

with(white_paint)
    draw_sprite(sprite_index,-1,x,y)
    //draw_circle(x,y,20,false)

surface_reset_target()


//now draw the actual TNT barrels, and the PAINTsur should be "revealing" them

surface_set_target(MISSLEsur)

var i=0;




//if you remove this blend mode, you can see that the black and white parts of the PAINTsur are being applied correctly


draw_set_blend_mode(bm_subtract)

draw_surface_ext(PAINTsur,0,0,1,1,0,c_white,1)

surface_reset_target()

blend_normal()



if(state=GOMISSLE){

    if(point_distance(x,y,MISSLEx,MISSLEy)&lt;speed){
        speed=0
        x=MISSLEx
        y=MISSLEy
        
        state=PAINTMISSLE
        
        path_start(missle_paint_path,PAINTspe,path_action_stop,false)
        
    
    }
}


if(state=PAINTMISSLE)
    instance_create(x,y,white_paint)
    


if(state=DONE){

    if(point_distance(x,y,xstart,ystart)&lt;spe)
        instance_destroy()
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(state=PAINTMISSLE){



    motion_set(point_direction(x,y,xstart,ystart),spe)
    
    state=DONE
    
    with(pencil_missle){
    
        motion_set(0,spe+random(SPEnoise))
    }
    
    with(paint_ride){
        CURRENTspr=pencil_missle_spr
        motion_set(0,spe+random(SPEnoise))
    }
    
    with(zeplin_P3_controller)
        alarm[0]=rate
    
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_surface(MISSLEsur,0,0)


draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
