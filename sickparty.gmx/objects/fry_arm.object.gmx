<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>arm_ball_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>NUM=6;

var i=0;

repeat(NUM){

    SON[i]=instance_create(x,y,arm_ball)
    
    if(i=NUM-1)
    SON[i].sprite_index=arm_hand_spr
    
    i+=1
    
}


ANG=0

POINTdir=0

DISt=10

INIT=0
READY=1
TURNING=2

state=INIT

LEN=6

ANGspe=1.5

FLIP=1
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(state=TURNING){

//turn up
if(POINTdir=90){

ANG+=ANGspe

if(ANG&gt;=POINTdir){

    ANG=POINTdir
    
    state=READY
    
    var FLAME=instance_create(SON[NUM-1].x+lengthdir_x(10,ANG),SON[NUM-1].y+lengthdir_y(10,ANG),fry_maker);
    
    with(FLAME)
        event_perform(ev_create,0)
    FLAME.FLIP=FLIP
    //1=UP, 2=HORZ
    FLAME.TYPE=1
    
}
}


//turn down
if(POINTdir=0)
or
POINTdir=180
{

ANG-=ANGspe*FLIP

var STOP=false;

if(FLIP=1)
if(ANG&lt;=POINTdir)
    STOP=true
    
if(FLIP=-1)
if(ANG&gt;=POINTdir)
    STOP=true

if(STOP=true){

    ANG=POINTdir
    
    state=READY
    
    var FLAME=instance_create(SON[NUM-1].x+lengthdir_x(10,ANG),SON[NUM-1].y+lengthdir_y(10,ANG),fry_maker);
    
    with(FLAME)
        event_perform(ev_create,0)
    FLAME.FLIP=FLIP
    //1=UP, 2=HORZ
    FLAME.TYPE=2
    
    
}
}


}


var i=0;


repeat(NUM){

    SON[i].x=x+lengthdir_x(LEN*i,ANG);
    SON[i].y=y+lengthdir_y(LEN*i,ANG);
    
    
    
    
    
    i+=1
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()


var i=0;

var ME=id;

repeat(NUM){

    with(SON[i])
        image_angle=point_direction(x,y,ME.x,ME.y)-180
    
    i+=1
}


//draw_text(x,y,POINTdir)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
