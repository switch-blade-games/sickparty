<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>hitler_paint_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_enemy</parentName>
  <maskName>hitler_mask_spr</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>DROP=0

WAIT=1

LAUGH=2

SEEK=3

ROLL=4
PAINTING=5

BOMB=6


flip=1

event_inherited()

enemy_init(260)


LAUGHtime=60

state=WAIT

//motion_set(90,1)

grav=0.1


Xdist=x
Ydist=240

Xplace=x

Yplace=y

WAITtime=60


side=1

ROLLspe=4

FALLsnd=false

PAINTlen=40

PAINTtime=120

xspeed = 0;
xnode = false;
xsign = 1;
xdist = 0;
xfrom = x;
xto = x;

//alarm[0]=LAUGHtime

alarm[2]=2

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(zyclon)
    instance_destroy()
    
with(gas_cloud)
    instance_destroy()
    
with(toy_plane)
    instance_destroy()
    
with(war_balloon)
    instance_destroy()

with(drop_bomb)
    instance_destroy()
    
with(flamer_46)
    instance_destroy()
    
with(flamer)
    instance_destroy()
    
with(flamer_remain)
    instance_destroy()
    
    
with(hitler_bullet)
    instance_destroy()
    
    
var SON=instance_create(x,y,hitler_hurt);

with(SON)
    event_perform(ev_create,0)
    
SON.facing=flip

SON.MAKEpaint=true
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///finish painting, create new attack

///tell controller to make another painting

state=SEEK


zep_P2_controller_X.alarm[0]=60

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// start seeking

state=SEEK

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Xplace=round(zepplin.x+Xdist)

Yplace=round(zepplin.y+Ydist)



if(state=WAIT){

    x=Xplace
    y=Yplace
    
}


if(state=SEEK){

    x=Xplace
    y=Yplace

    if(instance_number(summon_node)=1){
    
        if(summon_node.x&gt;x)
            flip=1
        else
            flip=-1
            
        state=ROLL
        xnode = false;
    }
}

if(state=ROLL){
    
    y=Yplace
    
    var SNAP=false;
    
    //setup for determining what x to "snap" to and start painting
    var NODEside=1;
    //figuring wout where node is
    if(summon_node.x&lt;zepplin.x+400)
    NODEside=-1
    
    if (!xnode)
        {
        xnode = true;
        xdest = summon_node.x+(PAINTlen*NODEside);
        xsign = sign(xdest-x);
        }
    
    if (abs(xdest-x) &lt; 80)
        {
        x += xspeed;
        xspeed = (0.1+abs(xdest-x)/80)*ROLLspe*xsign;
        }
    else
        {
        x += xspeed;
        xspeed += 0.1*ROLLspe*xsign;
        xspeed = clamp(xspeed,-ROLLspe,+ROLLspe);
        }
    
    if (x &gt; xdest and xsign &gt; 0)
    or (x &lt; xdest and xsign &lt; 0)
        SNAP = true;
    
    if(SNAP=true){
    
    //assigning new x dist
    Xdist=summon_node.x+(PAINTlen*side)
    
    alarm[2]=PAINTtime
    state=PAINTING
    }
    
}


if(state=PAINTING){

    with(summon_node)
        instance_destroy()

    x=Xplace
    y=Yplace
    
}


    
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(x&gt;zepplin.x+400)
    side=1
else
    side=-1

    
    //when painting, hitler follows a different set of rules governing flip, instead is side
if not(state=PAINTING)
image_xscale=flip

if(state=PAINTING)
image_xscale=-side

if(state=SEEK){
    //flip=1
    sprite_index=hitler_roll_spr
}


if(state=DROP)
sprite_index=hitler_laugh_spr

if(state=WAIT)
sprite_index=hitler_roll_spr

if(state=LAUGH)
sprite_index=hitler_laugh_spr

if(state=ROLL)
sprite_index=hitler_roll_spr

if(state=PAINTING)
sprite_index=hitler_paint_spr




draw_enemy_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
