<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>bug_base_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>30</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>RIGHT=1
LEFT=2

side=RIGHT


BASEx=0
BASEy=-30


var i=0;

NUM=4;

var WHATson=-1;

var TESTtop=false;

repeat(NUM){

    
    SEG[i]=instance_create(x,y,bug_seg_rig)
    
    if(i=NUM-1){
    WHATson=bug_segment
    TESTtop=true
    }
    else
    WHATson=bug_segment
    
   
    with(SEG[i]){
        event_perform(ev_create,0)
        MYobj=WHATson
        TOP=TESTtop
    }
    
    
        
    
    
    i+=1
}


extend=0

WAIT=0
UP=1
ORBS=2
DOWN=3

EXstate=WAIT

//UPtime=60


EXmax=40

EXspe=0.5

ATTACK=1

bug_orb_list()

alarm[0]=120


ORBtime=60

CRACKLEodds=10


PREmovetime=60


MOVE=false

MOVEspe=0.5


CATrate=180


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(MOVE=false)
exit

instance_create(x,y-20,cater_head)

alarm[4]=CATrate
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MOVE

if(side=LEFT)
side=RIGHT
else
side=LEFT

MOVE=true


if(side=RIGHT)
motion_set(0,MOVEspe)

if(side=LEFT)
motion_set(180,MOVEspe)


instance_create(x,y-20,cater_head)

alarm[4]=CATrate
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DOWN

play_snd(brick_crackle_snd,false)
        snd_pitch(brick_crackle_snd,0.3)

EXstate=DOWN
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make orbs


if(ds_list_empty(ORBlist)){

bug_orb_list()

alarm[2]=60

exit
}



    var PICK=ds_list_find_value(ORBlist,0);
    
    ds_list_delete(ORBlist,0)
    
    instance_create(SEG[PICK].x,SEG[PICK].y,bug_orb)
    
    snd_play(orb_shot_snd,false)
    snd_pitch(orb_shot_snd,0.4)
    
alarm[1]=ORBtime



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///UP

play_snd(brick_crackle_snd,false)
        snd_pitch(brick_crackle_snd,0.3)

EXstate=UP
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>


var i=0;

repeat(NUM){

    SEG[i].x=x+BASEx
    SEG[i].y=y+BASEy-(extend*(i))
    
    i+=1
}


if(EXstate=UP){

    bug_crackle()
    
    extend+=EXspe
    
    if(extend&gt;=EXmax){
    
        alarm[1]=ORBtime
        EXstate=ORBS
    
        extend=EXmax
        
    }
}


if(EXstate=DOWN){

    extend-=EXspe
    
    bug_crackle()
    
    if(extend&lt;=0){
        extend=0
        EXstate=WAIT
        alarm[3]=PREmovetime
    }
}


if(MOVE=true){

bug_crackle()

    if(side=RIGHT)
    if(x&gt;=global.BUGx+370){
        speed=0
        x=global.BUGx+370
        MOVE=false
        alarm[0]=60
        
    }
    
    if(side=LEFT)
    if(x&lt;global.BUGx+30){
        speed=0
        x=global.BUGx+30
        MOVE=false
        alarm[0]=60
    }
}
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self()

draw_text(x,y,EXstate)

exit
repeat(8){

    draw_sprite_ext(bug_leg_spr,-1,x+random(20)-random(20),y+10,1,1,random(360),c_white,1)
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
