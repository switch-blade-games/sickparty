<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_stay_active</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>team = -1;
damage = 1;
max_damage = -1;
deal_damage = true;
destroy_on_contact = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_shootable">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (team == other.team) or (!other.block_projectiles) or (!deal_damage)
    exit;

if (other.take_damage) and (other.flash &lt; 0.5)
    {
    var temp_life = other.life;
    other.life = max(0,other.life-damage);
    var damage_dealt = abs(temp_life-other.life);
    if (max_damage &gt; -1)
        {
        max_damage -= damage_dealt;
        if (max_damage &lt;= 0)
            {
            max_damage = 0;
            deal_damage = false;
            destroy_on_contact = true;
            }
        }
    
    other.flash = 1;
    if (global.CFG[config.particles])
    and (other.sprite_index &gt; -1)
        {
        var spr = other.sprite_index;
        var ind = other.image_index;
        var sw = sprite_get_width(spr);
        var sh = sprite_get_height(spr);
        
        repeat(choose(2,3))
            {
            var inst = instance_create(x,y,obj_particle);
            inst.sprite_index = spr;
            inst.image_index = ind;
            inst.x2 = 4+irandom(4);
            inst.y2 = 4+irandom(4);
            inst.x1 = irandom((sw-1)-inst.x2);
            inst.y1 = irandom((sh-1)-inst.y2);
            inst.direction = direction+random_range(-30,30);
            inst.speed = 2+random(2);
            }
        }
    }

if (destroy_on_contact)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (team == other.team) or (!other.block_projectiles) or (!deal_damage)
    exit;

if (other.take_damage) and (other.flash &lt; 0.5)
    {
    var temp_life = other.life;
    other.life = max(0,other.life-damage);
    var damage_dealt = abs(temp_life-other.life);
    if (max_damage &gt; -1)
        {
        max_damage -= damage_dealt;
        if (max_damage &lt;= 0)
            {
            max_damage = 0;
            deal_damage = false;
            destroy_on_contact = true;
            }
        }
    
    other.flash = 1;
    if (global.CFG[config.particles])
    and (other.sprite_index &gt; -1)
        {
        var spr = other.sprite_index;
        var ind = other.image_index;
        var sw = sprite_get_width(spr);
        var sh = sprite_get_height(spr);
        
        repeat(choose(2,3))
            {
            var inst = instance_create(x,y,obj_particle);
            inst.sprite_index = spr;
            inst.image_index = ind;
            inst.x2 = 4+irandom(4);
            inst.y2 = 4+irandom(4);
            inst.x1 = irandom((sw-1)-inst.x2);
            inst.y1 = irandom((sh-1)-inst.y2);
            inst.direction = direction+random_range(-30,30);
            inst.speed = 2+random(2);
            }
        }
    }

if (destroy_on_contact)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="par_actor">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (team == other.team) or (!other.block_projectiles) or (!deal_damage)
    exit;

if (other.take_damage) and (other.flash &lt; 0.5)
    {
    var temp_life = other.life;
    other.life = max(0,other.life-damage);
    var damage_dealt = abs(temp_life-other.life);
    if (max_damage &gt; -1)
        {
        max_damage -= damage_dealt;
        if (max_damage &lt;= 0)
            {
            max_damage = 0;
            deal_damage = false;
            destroy_on_contact = true;
            }
        }
    
    other.flash = 1;
    if (global.CFG[config.particles])
    and (other.sprite_index &gt; -1)
        {
        var spr = other.sprite_index;
        var ind = other.image_index;
        var sw = sprite_get_width(spr);
        var sh = sprite_get_height(spr);
        
        repeat(choose(2,3))
            {
            var inst = instance_create(x,y,obj_particle);
            inst.sprite_index = spr;
            inst.image_index = ind;
            inst.x2 = 4+irandom(4);
            inst.y2 = 4+irandom(4);
            inst.x1 = irandom((sw-1)-inst.x2);
            inst.y1 = irandom((sh-1)-inst.y2);
            inst.direction = direction+random_range(-30,30);
            inst.speed = 2+random(2);
            }
        }
    }

if (destroy_on_contact)
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
