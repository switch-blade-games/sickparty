<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_actor</parentName>
  <maskName>msk_player</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

xstart = x;
ystart = y;

// player move states
enum mState
    {
    walk,
    duck,
    mb,
    wc,
    moto,
    dead,
    size
    }

enum aState
    {
    flat_idle,
    flat_wait,
    flat_fire,
    walk_move,
    walk_fire,
    flat_duck_idle,
    flat_duck_fire,
    wc_idle,
    wc_move,
    wc_fire,
    mb_idle,
    mb_move,
    mb_fire,
    moto_idle,
    moto_fire,
    roll,
    dead_roll,
    dead,
    victory,
    size
    }

// input slot
slot = -1;

// player motion state/flags
no_clip = false;
move_state = mState.walk;
on_ground = false;
on_ramp = false;
lock = false;
drop = false;
wait = 0;
respawn_timer = 0;
respawn_time = 180;
respawn_flash = false;
death_timer = 0;
death_time = 120;
flash_rate = 3; // higher = slower
grace_jump = 0; // 6
ramp_slope = 1;
wc_side = tile_side.none;
no_wc = false;
no_wc_time = 0;
mb_id = noone;
mb_offset = 0;
mb_offset_old = 0;
mb_sign = 1;
no_mb = false;
no_mb_time = 0;
vehicle_id = noone;
on_vehicle = false;
mShake = 0;
mShake_timer = 140;
step_sfx = false;
land_sfx = false;

// player position/physics
walk_speed = 2;
moto_speed = 3;
mb_speed = 2;
wc_speed = 2;
fall_speed = 10;
grav = 0.4;
fric = 1;
xspeed = 0;
yspeed = 0;
subx = 0;
suby = 0;
xpre = x;
ypre = y;

// player orientation
aim = 0;
dir = 1;
face = 1;

// player weapon
weapon_stats();
cur_weapon = weapon.rifle;
shoot_timer = 0;
flame_ang = 0;
gun_y = -18;

anim_init();
skin_id = skin.yolo;
anim_set_skin(skin_id);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// cycle through skins
if (keyboard_check_pressed(vk_f2))
or (gamepad_check_pressed_all(gpinput.bumpl))
    {
    skin_id++;
    if (skin_id &gt;= skin.size)
        skin_id = skin.stone;
    anim_set_skin(skin_id);
    }
// load skin files
if (keyboard_check_pressed(vk_f3))
    {
    var _sheet_path_new = "";
    var _json_path_new  = "";
    while(!file_exists(_sheet_path_new))
        _sheet_path_new = get_open_filename("PNG Files|*.png","");
    while(!file_exists(_json_path_new))
        _json_path_new = get_open_filename("JSON Files|*.json","");
    
    anim_load_skin(skin_id,_sheet_path_new,_json_path_new);
    anim_set_skin(skin_id);
    }

input();
detect();
apply_gravity();
apply_input();
apply_force();
collide();
animate();
live();

// weapon
if (shoot_timer &gt; 0)
    shoot_timer--;
if (flash &gt; 0)
    flash--;
if (cur_weapon == weapon.flame) and (flame_ang != aim)
    flame_ang -= clamp(angle_difference(flame_ang,aim),-10,10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!skin_ready)
    {
    draw_sprite(player_icon_spr,skin_id,x,y-20);
    exit;
    }

// retrieve animation frame properties
var _f = floor(img_index);
var tx = frame_info[_f,FRAME_TEX_X];
var ty = frame_info[_f,FRAME_TEX_Y];
var tw = frame_info[_f,FRAME_TEX_W];
var th = frame_info[_f,FRAME_TEX_H];

if (respawn_flash) or (flash &gt; 0)
    {
    shader_set(shd_flash);
    draw_sprite_part_ext(spr_index,0,tx,ty,tw,th,x-(tw/2)*face + off_x,y+mShake-th + off_y,face,1,-1,1);
    shader_reset();
    }
else
    draw_sprite_part_ext(spr_index,0,tx,ty,tw,th,x-(tw/2)*face + off_x,y+mShake-th + off_y,face,1,-1,1);

//draw_text_outline(x,y+20,"TARGET\#: "+string(target_num))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
