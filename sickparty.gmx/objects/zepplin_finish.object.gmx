<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>zeplin_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>NORMAL=1

EXPLODE=2

EXPLODEdone=3


state=NORMAL

TOPsur=-1;

EXPLODEadd=10


EXPLODEfade=0

EXPLODEmax=24

EXPLODErate=10

EXPLODEx=0

EXPLODEnoise=20

UNDER=instance_create(x,y,zepplin_under)

//LEFT=1
//RIGHT=2

Hmax=8
Hfade=0
Hrate=0.03
Hrad = 0;

//Hstate=choose(LEFT,RIGHT)

//UP=1
//DOWN=2

//Vstate=choose(UP,DOWN)

Vmax=8
Vfade=0
Vrate=0.01
Vrad = 0;

//make monkey-bars

var i=0;

NUM=16;

repeat(NUM){


BAR[i]=instance_create(0,0,monkeybar_move)

i+=1
}

var i=0;

repeat(4){

CAN[i]=instance_create(0,0,zep_canvas)

i+=1
}


//instance_create(0,0,zeplin_controller)


//make nodes for elec attack

Lnode=instance_create(x,y,elec_place)
Rnode=instance_create(x,y,elec_place)


with(monkeybar_move)
visible=false

PORT=instance_create(x,y,hitler_portrait)

PORTx=400
PORTy=230



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///start explode sequence

state=EXPLODE

with(zepplin_under)
    sprite_index=zeplin_under_explode_spr
    
//with(zep_canvas)
    //alarm[1]=2
    

alarm[0]=2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if not(state=EXPLODE)
exit

EXPLODEfade+=1

EXPLODEx=EXPLODEfade*EXPLODEadd


var i=0;

repeat(14){

instance_create(x+400+EXPLODEx+random(EXPLODEnoise)-random(EXPLODEnoise),y+(20*i)+random(EXPLODEnoise)-random(EXPLODEnoise),explode_big)

instance_create(x+400-EXPLODEx+random(EXPLODEnoise)-random(EXPLODEnoise),y+(20*i)+random(EXPLODEnoise)-random(EXPLODEnoise),explode_big)

i+=1
}

if(EXPLODEfade&gt;=EXPLODEmax){
    state=EXPLODEdone
    instance_create(0,0,zeplin_controller)
    
    
}



alarm[0]=EXPLODErate
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// recreate surface if it doesn't exist
if (!surface_exists(TOPsur))
    TOPsur = surface_create(800,480);

// draw top surface
surface_set_target(TOPsur);
draw_clear_alpha(c_white,0)

draw_sprite(zeplin_spr,-1,0,0)

if (state=EXPLODE or state=EXPLODEdone)
    {
    blend_sub()
    draw_set_color(c_white)
    
    draw_rectangle(400,0,400+EXPLODEx,280,false)
    draw_rectangle(400,0,400-EXPLODEx,280,false)
    
    blend_normal()
    }

surface_reset_target();

// OLD SHIP SWAYING

/*
if(Hstate=RIGHT){
    Hfade+=Hrate
    if(Hfade&gt;Hmax)
        Hstate=LEFT
}
if(Hstate=LEFT){
    Hfade-=Hrate
    if(Hfade&lt;-Hmax)
        Hstate=RIGHT
}
if(Vstate=UP){
    Vfade+=Vrate
    if(Vfade&gt;Hmax)
        Vstate=DOWN
}
if(Vstate=DOWN){
    Vfade-=Vrate
    if(Vfade&lt;-Vmax)
        Vstate=UP
}
*/

// ship swaying
Hrad += Hrate;
if (Hrad &gt; 2*pi)
    Hrad = 0;
Hfade = +cos(Hrad)*Hmax;
Vrad += Vrate;
if (Vrad &gt; 2*pi)
    Vrad = 0;
Vfade = -sin(Vrad)*Vmax;

x=round(xstart+Hfade);
y=round(ystart+Vfade);

// move monkeybars
for(var i=0; i&lt;NUM; i++;)
    {
    BAR[i].x=round(x+240+(20*i));
    BAR[i].y=round(y+320);
    }


// move canvases
//if not(state=EXPLODE)
for(var i=0; i&lt;4; i++;)
    {
    if (instance_number(CAN[1])=1)
        {
        CAN[i].x=round(x+270+(i*90));
        CAN[i].y=round(y+200);
        }
    }
    
//elec node placement
Lnode.x=round(x+240)
Lnode.y=round(y+320)

Rnode.x=round(x+320+240)
Rnode.y=round(y+320)

// ship background
UNDER.x=round(xstart+Hfade*0.75);
UNDER.y=round(ystart+Vfade);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(zeplin_frame_spr,-1,x,y)

draw_surface_ext(TOPsur,x,y,1,1,0,c_white,1)

//draw_text(view_xview[0]+20,view_yview[0]+20,state)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
